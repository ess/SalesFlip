- lead = Lead.get(params[:id])
- infomail_templates = InfomailTemplate.all

#step_1
  %h3= t(:how_did_the_call_go)

  %ol
    %li= link_to t(:customer_requested_infomail),
      "#",
      :"data-next" => "infomail"
    %li= link_to t(:customer_wants_to_be_called_back),
      lead_path(lead, :lead => { :status => "Contacted" }),
      :"data-next" => "call_back"
    %li= link_to t(:customer_doesnt_want_to_be_contacted),
      lead_path(lead, :lead => { :status => "Rejected" })
    %li= link_to t(:customer_requested_offer),
      lead_path(lead, :lead => { :status => "Offer Requested" }),
      :"data-next" => "offer_requested"

= simple_form_for :infomail,
  :url => lead_infomails_path(:lead_id => lead.id),
  :html => { :style => "display: none", :"data-next" => "schedule_infomail_followup", :id => "infomail" } do |form|
  %h3= t(:which_infomail_should_be_sent)

  %fieldset
    .33
      = form.label :template
      = form.select :template,
        infomail_templates.map { |t| [t.name, t.id] },
        :selected => lead.campaign_id ? InfomailTemplate.first(:campaign_id => lead.campaign_id).try(:id) : nil

    = simple_fields_for lead do |f|
      .clear
      .a.25= f.input :salutation, :as => :select, :collection => Lead.salutations.map(&:to_s)
      .25= f.input :title, :as => :select, :collection => Lead.titles.map(&:to_s)
      .z.50= f.input :last_name
      .clear
      .a.50= f.input :email

    - if current_user.signature.blank?
      .clear
      = simple_fields_for current_user do |f|
        = f.input :signature, :as => :text, :input_html => { :rows => 4 }

  = form.button :submit, t(:send_infomail)

= simple_form_for lead.tasks.new(:name => t(:follow_up_about_infomail), :due_at => 3.days.from_now),
  :html => { :style => "display: none", :id => "schedule_infomail_followup" } do |form|
  %h3= t(:want_to_schedule_a_followup_call)

  %fieldset
    = form.hidden_field :asset_id
    = form.hidden_field :asset_type
    = form.hidden_field :assignee_id, :value => current_user.id
    = form.hidden_field :category, :value => "Follow-up"

    = form.input :name
    = datepicker_for(form, :due_at, :preset_date => false, :id => "infomail_task_due_at")

  = form.button :submit, t(:schedule)
  = link_to t(:skip), leads_path, :class => "skip"

= simple_form_for lead.tasks.new(:name => t(:rescheduled), :due_at => 30.minutes.from_now),
  :html => { :style => "display: none", :id => "call_back" } do |form|
  %h3= t(:want_to_schedule_a_followup_call)

  %fieldset
    = form.hidden_field :asset_id
    = form.hidden_field :asset_type
    = form.hidden_field :assignee_id, :value => current_user.id
    = form.hidden_field :category, :value => "Call"

    = form.input :name
    = datepicker_for(form, :due_at, :preset_date => false, :id => "call_back_due_at")

  = form.button :submit, t(:schedule)
  = link_to t(:skip), leads_path, :class => "skip"

= simple_form_for lead.tasks.new(:name => t(:send_offer), :due_at => 30.minutes.from_now),
  :html => { :style => "display: none", :id => "offer_requested" } do |form|
  %h3= t(:want_to_schedule_task_with_offer)

  %fieldset
    = form.hidden_field :asset_id
    = form.hidden_field :asset_type
    = form.hidden_field :assignee_id, :value => current_user.id
    = form.hidden_field :category, :value => "Email"

    = form.input :name
    = datepicker_for(form, :due_at, :preset_date => false, :id => "call_back_due_at")

  = form.button :submit, t(:schedule)
  = link_to t(:skip), leads_path, :class => "skip"

:css
  form .button {
    float: right;
  }

  form .skip {
    clear: both;
    color: #999;
    float: right;
    font-size: 12px;
    margin-top: 10px;
    font-style: italic;
  }

:javascript
  function after_load_callback() {
    var call_box = $$(".call_box").first();
    RealDateSelector.bind(call_box);

    function show_next(next) {
      if (next) {
        $(next).show();
        call_box.setStyle("margin-top", (-call_box.dimensions().height/2)+"px");
      }
      else {
        window.location = "/leads"
      }
    }

    $$(".call_box #step_1 a").each('on', 'click', function() {
      var next = this.get("data-next");

      $('step_1').hide();

      if ( !this.get("href").match("#") ) {
        xhr = new Xhr(this.get("href"), {
          method: "put",
          spinner: $("call_box_spinner"),
          onSuccess: function() { show_next(next) }
        }).send();
      }
      else {
        show_next(next);
      }

      return false;
    });

    $$(".call_box form").each('on', 'submit', function() {
      var next = this.get("data-next");
      this.hide();

      this.send({
        spinner: $("call_box_spinner"),
        onSuccess: function() {
          show_next(next);
        }
      });

      return false;
    });
  }
