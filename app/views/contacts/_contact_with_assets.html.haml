.contact_with_assets
  %h3.toggler.open
    = contact.full_name
    - if contact.phone.present? || contact.department.present?
      %small
        - info = []
        - info << "@ #{contact.department}" if contact.department.present?
        - info << "Phone: #{contact.phone}" 
        = info.compact.join(' | ')
        = " (do not call)" if contact.do_not_call
    %ul.actions
      %li
        = simple_form_for contact do |form|
          = hidden_field_tag :return_to, request.fullpath
          - if contact.tracked_by?(current_user)
            = hidden_field_tag 'contact[remove_tracker_ids][]', current_user.id
            = form.button :submit, t(:stop_updating_me), :id => 'stop_updating_me'
          - else
            = hidden_field_tag 'contact[tracker_ids][]', current_user.id
            = form.button :submit, t(:keep_me_updated), :id => 'keep_me_updated'
      - if can? :delete, contact
        %li.delete
          = simple_form_for contact, :html => { :method => :delete } do |form|
            = form.button :submit, t(:delete), :id => "delete_#{dom_id contact}"
  .toggle
    .info
      -#----------------------------------------------------------------------
      -# Info for Contact
      -#----------------------------------------------------------------------
      .details
        %ul.actions
          %li= link_to t(:edit), edit_contact_path(contact, :return_to => request.fullpath), :id => "edit_#{dom_id(contact)}"
        .contact-avatar
          = image_tag contact.gravatar_url
        .half
          %dl
            = show_attribute(contact, 'mobile')
            = show_attribute(contact, 'fax')
            %dt= t('address')
            %dd
              - c, address = contact, []
              - address << contact.address if contact.address.present?
              - address << [c.postal_code, c.city, c.country].compact.join(', ')
              = address.compact.join('<br/>').html_safe
            = show_attribute(contact, 'source')
        .half
          %dl
            %dt= t('email')
            %dd
              - emails = []
              - emails << mail_to(c.email, t('primary_email'), :bcc => current_user.dropbox_email) if c.email.present?
              - emails << mail_to(c.alt_email, t('alt_email'), :bcc => current_user.dropbox_email) if c.alt_email.present?
              = emails.compact.join(', ').html_safe
            %dt= t('social_media')
            %dd
              - twit = c.website.blank?   ? nil : link_to('Twitter', c.website)
              - link = c.linked_in.blank? ? nil : link_to('LinkedIn',c.linked_in)
              - face = c.facebook.blank?  ? nil : link_to('Facebook',c.facebook)
              - xing = c.xing.blank?      ? nil : link_to('Xing', c.xing)
              = [twit, link, face, xing].compact.join(', ').html_safe
            = show_attribute(contact, 'website', link_to(c.website))
            
            %dt Permissions
            %dd
              - permissions = []
              - permissions << c.permission
              - permissions << c.permitted_user_ids.map(&:to_s).join(',') unless c.permitted_user_ids.blank?
              = permissions.compact.join(' | ')
        %small.timestamp
          = raw t(:added_ago_by, :time => l(contact.created_at, :format => :short), :by => contact.user.username)
      -#----------------------------------------------------------------------
      -# Tasks for Contact
      -#----------------------------------------------------------------------
      .details
        = render :partial => 'tasks/task', :collection => contact.tasks
        - if !contact.lead_id.blank?
          = render :partial => 'tasks/task', :collection => contact.lead.tasks
        .add
          = link_to raw("<b>+</b>#{t('add_task')}"), new_task_path(:asset_id => contact.id, :asset_type => "Contact", :return_to => request.fullpath), :id => "add_task_for_#{dom_id contact}", :class => 'add_task' 
      -#----------------------------------------------------------------------
      -# Comments for Contact
      -#----------------------------------------------------------------------
      - if contact.comments.any?
        - contact.comments.sorted.each do |comment|
          = render :partial => 'comments/inline_comment', :locals => { :comment => comment }
        - if !contact.lead_id.blank?
          - contact.lead.comments.sorted.each do |comment|
            = render :partial => 'comments/inline_comment', :locals => { :comment => comment }
      .add-comment
        = simple_form_for @comment || Comment.new, :html => { :multipart => true } do |form|
          = hidden_field_tag :return_to, request.fullpath
          = form.hidden_field :commentable_type, :value => "Contact"
          = form.hidden_field :commentable_id, :value => contact.id
          = form.input :text, :as => :text, :input_html => { :rows => 2 }, :label => t('add_comment')
          .50.a
            .string
              = form.simple_fields_for 'attachments_attributes[]', Attachment.new do |attachment_form|
                = attachment_form.input :attachment, :as => :file
          .50.z
            .submit
              = form.submit t(:save_comment)
          .clear
    -#
      %dl.item.contact
        %dt{ :class => contact.source.present? ? contact.source.downcase : "no-source"}
          = contact.source.present? ? contact.source : t(:no_source)
        %dd
          %strong= link_to contact.listing_name, contact, :id => contact.full_name.to_dom_id

          %small
          
            = " @ #{contact.account.name}" if contact.account
            = " | Email: #{mail_to(contact.email, nil, :bcc => current_user.dropbox_email)}" if contact.email.present?
            = " | Phone: <b>#{contact.phone}</b>" if contact.phone.present?
            = " | Mobile: <b>#{contact.mobile}</b>" if contact.mobile.present?
            %br/
            - contact_time = l(contact.created_at, :format => :short)
            %em.timestamp
              - if contact.assignee_id.present?
                = t(:assigned_ago_by, :time => contact_time, :by => contact.user.username, :for => User.find(contact.assignee_id).full_name)
              - else
                = t(:added_ago_by, :time => contact_time, :by => contact.user.username)
          %span.actions
            = link_to t(:edit), [:edit, contact], :id => "edit_#{dom_id(contact)}"
            %b.divider= "|"
            = simple_form_for contact, :html => { :method => :delete } do |form|
              = form.button :submit, t(:delete_icon), :id => "delete_#{dom_id contact}", :class=> 'delete'
    
